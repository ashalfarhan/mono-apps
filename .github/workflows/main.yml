name: Main Workflow

on:
  push:
    paths-ignore:
      - '**.md'

env:
  CI: true
  CACHE_VERSION: v1
  SPA_DOMAIN: https://mono-acme-todo.surge.sh
  UI_PREVIEW_DOMAIN: https://mono-acme-ui.surge.sh

jobs:
  modules-changed:
    name: 🔦 Detecting which modules changed
    runs-on: ubuntu-latest
    outputs:
      spa: ${{ contains(steps.changed-files.outputs.all_modified_files, 'apps/spa/') }}
      ssr: ${{ contains(steps.changed-files.outputs.all_modified_files, 'apps/ssr/') }}
      ui: ${{ contains(steps.changed-files.outputs.all_modified_files, 'libs/ui/') }}
      uicore: ${{ contains(steps.changed-files.outputs.all_modified_files, 'libs/uicore/') }}
      common: ${{ contains(steps.changed-files.outputs.all_modified_files, 'libs/common/') }}
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🔦 Find file changes
        id: changed-files
        uses: tj-actions/changed-files@v41

  deps:
    name: 📪 Update cached dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🐢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 🗑 Restore cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            node_modules
            apps/**/node_modules
            libs/**/node_modules
          key: npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: ⬇️ Install dependencies
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        run: npm -w @acme/install run --frozen-lockfile

  app-spa:
    needs: [modules-changed, deps]
    if: ${{ needs.modules-changed.outputs.spa == 'true' }}
    name: 💻 App spa
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🐢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 🗑 Restore cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            node_modules
            apps/**/node_modules
            libs/**/node_modules
          key: npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: 👷‍♀️ Continous Integration
        id: ci
        run: |
          npm -w @acme/spa run fmt:check && npm -w @acme/spa run lint
          npm -w @acme/spa run test --run --reporter verbose
          npm -w @acme/spa run build && echo '::set-output name=build_success::true'

      # - name: 🚀 Continous Deployment
      #   if: ${{ steps.ci.outputs.build_success == 'true' && github.ref == 'refs/heads/main' }}
      #   run: |
      #     npm i -g surge
      #     surge apps/spa/dist ${{ env.SPA_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

  app-ssr:
    needs: [modules-changed, deps]
    if: ${{ needs.modules-changed.outputs.ssr == 'true' }}
    name: 💻 App ssr
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🐢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 🗑 Restore cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            node_modules
            apps/**/node_modules
            libs/**/node_modules
          key: npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: 👷‍♀️ Continous Integration
        id: ci
        run: |
          npm -w @acme/ssr run fmt:check && npm -w @acme/ssr run lint
          # npm -w @acme/ssr run test --run --reporter verbose
          npm -w @acme/ssr run build && echo '::set-output name=build_success::true'

      # - name: 🚀 Continous Deployment
      #   if: ${{ steps.ci.outputs.build_success == 'true' && github.ref == 'refs/heads/main' }}
      #   run: |
      #     npm i -g surge
      #     surge apps/ssr/dist ${{ env.SSR_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

  lib-ui:
    needs: [modules-changed, deps]
    if: ${{ needs.modules-changed.outputs.ui == 'true' }}
    name: 📦 Lib ui
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🐢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 🗑 Restore cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            node_modules
            apps/**/node_modules
            libs/**/node_modules
          key: npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: 👷‍♀️ Continous Integration
        id: ci
        run: |
          npm -w @acme/ui run fmt:check && npm -w @acme/ui run lint
          npm -w @acme/ui run test --run --reporter verbose
          npm -w @acme/ui run build:story && echo '::set-output name=build_success::true'

      # - name: 🚀 Continous Deployment
      #   if: ${{ steps.ci.outputs.build_success == 'true' && github.ref == 'refs/heads/main' }}
      #   run: |
      #     npm i -g surge
      #     surge libs/ui/storybook-static ${{ env.UI_PREVIEW_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

  lib-uicore:
    needs: [modules-changed, deps]
    if: ${{ needs.modules-changed.outputs.uicore == 'true' }}
    name: 📦 Lib uicore
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🐢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 🗑 Restore cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            node_modules
            apps/**/node_modules
            libs/**/node_modules
          key: npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: 👷‍♀️ Continous Integration
        id: ci
        run: |
          npm -w @acme/uicore run fmt:check && npm -w @acme/uicore run lint
          npm -w @acme/uicore run tsc --noEmit

  lib-common:
    needs: [modules-changed, deps]
    if: ${{ needs.modules-changed.outputs.common == 'true' }}
    name: 📦 Lib common
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🐢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 🗑 Restore cache
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            node_modules
            apps/**/node_modules
            libs/**/node_modules
          key: npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-${{ env.CACHE_VERSION }}-

      - name: 👷‍♀️ Continous Integration
        id: ci
        run: |
          npm -w @acme/common run fmt:check && npm -w @acme/common run lint
          npm -w @acme/common run tsc --noEmit
